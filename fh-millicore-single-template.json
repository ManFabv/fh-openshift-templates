{
  "kind": "Template",
  "apiVersion": "v1",
  "metadata": {
    "name": "millicore",
    "annotations": {
      "description": "RHMAP Millicore",
      "tags": "rhmap,mobile,tomcat,java,httpd",
      "iconClass": "icon-tomcat"
    }
  },
  "parameters": [
    {
      "name": "MILLICORE_IMAGE",
      "value": "docker.io/rhmap/millicore",
      "description": "Millicore docker image",
      "required": true
    },
    {
      "name": "MILLICORE_IMAGE_VERSION",
      "value": "7.32.0-2290",
      "description": "Millicore image version",
      "required": true
    },
    {
      "name": "MONGODB_SERVICE_NAME",
      "displayName": "Mongodb Service Name",
      "description": "The name of the OpenShift Service exposed for mongodb.",
      "value": "mongodb-1",
      "required": true
    },
    {
      "name": "MONGODB_ADMIN_PASSWORD",
      "description": "The MongoDB Admin password",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}",
      "required": true
    },
    {
      "name": "FEEDHENRY_SDKS_IMAGE",
      "value": "docker.io/rhmap/feedhenry-sdks",
      "description": "FeedHenry SDKs and templates image name",
      "required": true
    },
    {
      "name": "FEEDHENRY_SDKS_IMAGE_VERSION",
      "value": "54",
      "description": "FeedHenry SDKs and templates image version",
      "required": true
    },
    {
      "name": "FEEDHENRY_SDKS_DIR",
      "value": "/feedhenry-sdks",
      "description": "FeedHenry SDKs and templates path",
      "required": true
    },
    {
      "name": "FH_ADMIN_USER_NAME",
      "value": "admin@feedhenry.net",
      "description": "Millicore admin user",
      "required": true
    },
    {
      "name": "FH_ADMIN_USER_PASSWORD",
      "value": "Password1",
      "description": "Millicore admin password",
      "required": true
    },
    {
      "name": "FH_DOMAIN_NAME",
      "value": "rhmap",
      "description": "Customer subdomain name",
      "required": true
    },
    {
      "name": "MYSQL_USER",
      "value": "coreadmin",
      "description": "MYSQL database user",
      "required": true
    },
    {
      "name": "MYSQL_PASSWORD",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}",
      "description": "MYSQL database password",
      "required": true
    },
    {
      "name": "MYSQL_HOST",
      "value": "mysql",
      "description": "MYSQL database host",
      "required": true
    },
    {
      "name": "MYSQL_PORT",
      "value": "3306",
      "description": "MYSQL database port",
      "required": true
    },
    {
      "name": "MYSQL_DB_NAME",
      "value": "shard0",
      "description": "Name of MYSQL database",
      "required": true
    },
    {
      "name": "MEMCACHED_SERVICE_HOST",
      "value": "memcached",
      "description": "Memcached service host",
      "required": true
    },
    {
      "name": "MEMCACHED_SERVICE_PORT",
      "value": "11211",
      "description": "Memcached service port",
      "required": true
    },
    {
      "name": "FH_AAA_SERVICE_HOST",
      "value": "fh-aaa",
      "description": "fh-aaa service host",
      "required": true
    },
    {
      "name": "FH_AAA_SERVICE_PORT",
      "value": "8080",
      "description": "fh-aaa service port",
      "required": true
    },
    {
      "name": "FH_GIT_SERVICE_HOST",
      "value": "gitlab-shell",
      "description": "Git access host (including port)",
      "required": true
    },
    {
      "name": "BUILDER_ANDROID_SERVICE_HOST",
      "value": "",
      "description": "Build farm android url"
    },
    {
      "name": "BUILDER_BLACKBERRY_SERVICE_HOST",
      "value": "",
      "description": "Build farm blackberry url"
    },
    {
      "name": "BUILDER_IPHONE_SERVICE_HOST",
      "value": "",
      "description": "Build farm iphone url"
    },
    {
      "name": "BUILDER_WINPHONE_SERVICE_HOST",
      "value": "",
      "description": "Build farm winphone url"
    },
    {
      "name": "CLUSTER_NAME",
      "value": "rhmap",
      "description": "Cluster name",
      "required": true
    },
    {
      "name": "CLUSTER_DOMAIN",
      "value": "local.feedhenry.io",
      "description": "Full domain used for build purposes",
      "required": true
    },
    {
      "name": "FH_MILLICORE_SERVICE_HOST",
      "value": "millicore",
      "description": "Internal service host",
      "required": true
    },
    {
      "name": "FH_MILLICORE_SERVICE_PORT",
      "value": "8080",
      "description": "Internal service port",
      "required": true
    },
    {
      "name": "KEYCLOAK_SERVICE_HOST",
      "value": "ups",
      "description": "Keycloak service host",
      "required": true
    },
    {
      "name": "KEYCLOAK_SERVICE_PORT",
      "value": "8080",
      "description": "Keycloak service port",
      "required": true
    },
    {
      "name": "MESSAGE_SERVER_SERVICE_HOST",
      "value": "fh-messaging",
      "description": "Internal feedhenry message server host",
      "required": true
    },
    {
      "name": "MESSAGE_SERVER_SERVICE_PORT",
      "value": "8080",
      "description": "Internal feedhenry message server ports",
      "required": true
    },
    {
      "name": "FH_MESSAGING_API_KEY",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}",
      "description": "Key for communicating with the FH_MESSAGING Service",
      "required": true
    },
    {
      "name": "FH_SCM_SERVICE_HOST",
      "value": "fh-scm",
      "description": "FH-SCM host",
      "required": true
    },
    {
      "name": "FH_SCM_SERVICE_PORT",
      "value": "8080",
      "description": "FH-SCM port",
      "required": true
    },
    {
      "name": "SUPERCORE_SERVICE_HOST",
      "value": "fh-supercore",
      "description": "Supercore host",
      "required": true
    },
    {
      "name": "SUPERCORE_SERVICE_PORT",
      "value": "8080",
      "description": "Supercore port",
      "required": true
    },
    {
      "name": "FH_SUPERCORE_API_KEY",
      "generate": "expression",
      "from": "[a-zA-Z0-9]{40}",
      "description": "",
      "required": true
    },
    {
      "name": "CONFIGURATION_FOLDER",
      "value": "/etc/feedhenry/core/",
      "description": "Folder to mount configuration including service keys",
      "required": true
    },
    {
      "name": "METRICS_BACKUP_LOG_PVC_SIZE",
      "value": "5Gi",
      "description": "The size of the volume for millicore metrics backup logs.",
      "required": true
    },
    {
      "name": "CLUSTER_HOST",
      "value": "rhmap.feedhenry.local"
    },
    {
      "name": "HTTPD_SERVICE_NAME",
      "displayName": "Service Name",
      "description": "The name of the OpenShift Service for httpd server.",
      "value": "rhmap-proxy"
    },
    {
      "name": "HTTPD_IMAGE",
      "value": "docker.io/rhmap/httpd24",
      "description": "The name of the image"
    },
    {
      "name": "HTTPD_IMAGE_VERSION",
      "value": "2.4-45",
      "description": "The version for the HTTPD_IMAGE"
    },
    {
      "name": "MILLICORE_AJP_HOST",
      "value": "millicore:8009",
      "displayName": "Millicore AJP host",
      "description": "Internal hostname for millicore AJP service"
    },
    {
      "name": "SUPERCORE_HOST",
      "value": "fh-supercore:8080",
      "displayName": "Supercore host",
      "description": "Internal hostname with port for supercore service"
    },
    {
      "name": "NGUI_HOST",
      "value": "fh-ngui:8080",
      "displayName": "fh-ngui url",
      "description": "Internal hostname for fh-ngui"
    },
    {
      "name": "APP_STORE_HOST",
      "value": "fh-appstore:8080",
      "description": ""
    },
    {
      "name": "BUILDER_SERVICE_URL",
      "value": "http://example.com",
      "displayName": "Digger hostname",
      "description": "Service for mobile app builder (Digger)"
    },
    {
      "name": "HTTPD_LOG_LEVEL",
      "value": "info",
      "displayName": "Log level",
      "description": "Apache log level"
    },
    {
      "name": "HTTPD_PROXY_PORT",
      "value" : "8010",
      "displayName": "Httpd proxy port",
      "description": "Httpd proxy port",
      "required": true
    },
    {
      "name" : "PLATFORM_DOCUMENT_ROOT",
      "value" : "/opt/rh/httpd24/root/opt/feedhenry",
      "displayName": "Document root",
      "description": "Httpd proxy document root folder",
      "required": true
    },
    {
      "name" : "TEMPLATES_SDK_FOLDER",
      "value" : "templates_sdks",
      "displayName": "Templates and sdk folder name",
      "description": "Folder name for templates and sdk",
      "required": true
    }
  ],
  "objects": [
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "millicore",
        "labels": {
          "name": "millicore"
        }
      },
      "spec": {
        "selector": {
          "name": "millicore"
        },
        "ports": [
          {
            "name": "http",
            "port": 8080
          },
          {
            "name": "ajp",
            "port": 8009
          }
        ]
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "loghost",
        "labels": {
          "name": "millicore"
        }
      },
      "spec": {
        "selector": {
          "name": "millicore"
        },
        "ports": [
          {
            "protocol": "UDP",
            "port": 514
          }
        ]
      }
    },
    {
      "kind": "Service",
      "apiVersion": "v1",
      "metadata": {
        "name": "${HTTPD_SERVICE_NAME}"
      },
      "spec": {
        "ports": [
          {
            "name": "server-http-port",
            "port": "${HTTPD_PROXY_PORT}"
          }
        ],
        "selector": {
          "name": "millicore"
        }
      }
    },
    {
      "kind": "PersistentVolumeClaim",
      "apiVersion": "v1",
      "metadata": {
        "name": "metrics-backup-log-data"
      },
      "spec": {
        "accessModes": [
          "ReadWriteOnce"
        ],
        "resources": {
          "requests": {
            "storage": "${METRICS_BACKUP_LOG_PVC_SIZE}"
          }
        }
      }
    },
    {
      "apiVersion": "v1",
      "kind": "Route",
      "metadata": {
        "labels": {
          "app": "${HTTPD_SERVICE_NAME}"
        },
        "name": "${HTTPD_SERVICE_NAME}-proxy-route"
      },
      "spec": {
        "host": "${CLUSTER_HOST}",
        "port": {
          "targetPort": "server-http-port"
        },
        "to": {
          "kind": "Service",
          "name": "${HTTPD_SERVICE_NAME}"
        },
        "tls": {
          "termination": "edge",
          "insecureEdgeTerminationPolicy": "Allow"
        }
      }
    },
    {
      "kind": "DeploymentConfig",
      "apiVersion": "v1",
      "metadata": {
        "name": "millicore",
        "labels": {
          "name": "millicore"
        }
      },
      "spec": {
        "triggers": [
          {
            "type": "ConfigChange"
          }
        ],
        "replicas": 1,
        "selector": {
          "name": "millicore"
        },
        "template": {
          "metadata": {
            "labels": {
              "name": "millicore"
            }
          },
          "spec": {
            "containers": [
              {
                "name": "millicore",
                "image": "${MILLICORE_IMAGE}:${MILLICORE_IMAGE_VERSION}",
                "ports": [
                  {
                    "containerPort": 8080
                  },
                  {
                    "protocol": "UDP",
                    "containerPort": 514
                  },
                  {
                    "containerPort": 8009
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/box/api/sys/info/ping",
                    "port": 8080
                  },
                  "initialDelaySeconds": 600,
                  "timeoutSeconds": 5,
                  "periodSeconds": 60,
                  "successThreshold": 1,
                  "failureThreshold": 2
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/box/api/sys/info/ping",
                    "port": 8080
                  },
                  "initialDelaySeconds": 100,
                  "timeoutSeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 1
                },
                "env": [
                  {
                    "name": "MONGODB_ADMIN_PASSWORD",
                    "value": "${MONGODB_ADMIN_PASSWORD}"
                  },
                  {
                    "name": "MONGODB_SERVICE_NAME",
                    "value": "${MONGODB_SERVICE_NAME}"
                  },
                  {
                    "name": "FH_MESSAGING_API_KEY",
                    "value": "${FH_MESSAGING_API_KEY}"
                  },
                  {
                    "name": "FH_ADMIN_USER_PASSWORD",
                    "value": "${FH_ADMIN_USER_PASSWORD}"
                  },
                  {
                    "name": "FH_ADMIN_USER_NAME",
                    "value": "${FH_ADMIN_USER_NAME}"
                  },
                  {
                    "name": "FH_DOMAIN_NAME",
                    "value": "${FH_DOMAIN_NAME}"
                  },
                  {
                    "name": "MYSQL_USER",
                    "value": "${MYSQL_USER}"
                  },
                  {
                    "name": "MYSQL_PASSWORD",
                    "value": "${MYSQL_PASSWORD}"
                  },
                  {
                   "name": "MYSQL_HOST",
                    "value": "${MYSQL_HOST}"
                  },
                  {
                    "name": "MYSQL_PORT",
                    "value": "${MYSQL_PORT}"
                  },
                  {
                    "name": "MYSQL_DB_NAME",
                    "value": "${MYSQL_DB_NAME}"
                  },
                  {
                    "name": "MEMCACHED_SERVICE_HOST",
                    "value": "${MEMCACHED_SERVICE_HOST}"
                  },
                  {
                    "name": "MEMCACHED_SERVICE_PORT",
                    "value": "${MEMCACHED_SERVICE_PORT}"
                  },
                  {
                    "name": "FH_AAA_SERVICE_HOST",
                    "value": "${FH_AAA_SERVICE_HOST}"
                  },
                  {
                    "name": "FH_AAA_SERVICE_PORT",
                    "value": "${FH_AAA_SERVICE_PORT}"
                  },
                  {
                    "name": "FH_GIT_SERVICE_HOST",
                    "value": "${FH_GIT_SERVICE_HOST}"
                  },
                  {
                    "name": "BUILDER_ANDROID_SERVICE_HOST",
                    "value": "${BUILDER_ANDROID_SERVICE_HOST}"
                  },
                  {
                    "name": "BUILDER_BLACKBERRY_SERVICE_HOST",
                    "value": "${BUILDER_BLACKBERRY_SERVICE_HOST}"
                  },
                  {
                    "name": "BUILDER_IPHONE_SERVICE_HOST",
                    "value": "${BUILDER_IPHONE_SERVICE_HOST}"
                  },
                  {
                    "name": "BUILDER_WINPHONE_SERVICE_HOST",
                    "value": "${BUILDER_WINPHONE_SERVICE_HOST}"
                  },
                  {
                    "name": "CLUSTER_NAME",
                    "value": "${CLUSTER_NAME}"
                  },
                  {
                    "name": "CLUSTER_DOMAIN",
                    "value": "${CLUSTER_DOMAIN}"
                  },
                  {
                    "name": "FH_MILLICORE_SERVICE_HOST",
                    "value": "${FH_MILLICORE_SERVICE_HOST}"
                  },
                  {
                    "name": "FH_MILLICORE_SERVICE_PORT",
                    "value": "${FH_MILLICORE_SERVICE_PORT}"
                  },
                  {
                    "name": "KEYCLOAK_SERVICE_HOST",
                    "value": "${KEYCLOAK_SERVICE_HOST}"
                  },
                  {
                    "name": "KEYCLOAK_SERVICE_PORT",
                    "value": "${KEYCLOAK_SERVICE_PORT}"
                  },
                  {
                    "name": "MESSAGE_SERVER_SERVICE_HOST",
                    "value": "${MESSAGE_SERVER_SERVICE_HOST}"
                  },
                  {
                    "name": "MESSAGE_SERVER_SERVICE_PORT",
                    "value": "${MESSAGE_SERVER_SERVICE_PORT}"
                  },
                  {
                    "name": "FH_SCM_SERVICE_HOST",
                    "value": "${FH_SCM_SERVICE_HOST}"
                  },
                  {
                    "name": "FH_SCM_SERVICE_PORT",
                    "value": "${FH_SCM_SERVICE_PORT}"
                  },
                  {
                    "name": "SUPERCORE_SERVICE_HOST",
                    "value": "${SUPERCORE_SERVICE_HOST}"
                  },
                  {
                    "name": "SUPERCORE_SERVICE_PORT",
                    "value": "${SUPERCORE_SERVICE_PORT}"
                  },
                  {
                    "name": "SUPERCORE_API_KEY",
                    "value": "${FH_SUPERCORE_API_KEY}"
                  },
                  {
                    "name": "CONFIGURATION_FOLDER",
                    "value": "${CONFIGURATION_FOLDER}"
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "git-ssh-keys-volume",
                    "mountPath": "/etc/feedhenry/gitlab-shell",
                    "readOnly": true
                  },
                  {
                    "name": "config-volume",
                    "mountPath": "${CONFIGURATION_FOLDER}",
                    "readOnly": true
                  },
                  {
                    "name": "templates-and-sdks",
                    "mountPath": "${FEEDHENRY_SDKS_DIR}",
                    "readOnly": true
                  },
                  {
                    "name": "metrics-backup-log-volume",
                    "mountPath": "/var/log/feedhenry/metrics"
                  }
                ],
                "imagePullPolicy": "IfNotPresent"
              },
              {
                "name": "${HTTPD_SERVICE_NAME}",
                "image": "${HTTPD_IMAGE}:${HTTPD_IMAGE_VERSION}",
                "ports": [
                  {
                    "containerPort": "${HTTPD_PROXY_PORT}"
                  }
                ],
                "livenessProbe": {
                  "httpGet": {
                    "path": "/health",
                    "port": 8010 
                  },
                  "initialDelaySeconds": 600,
                  "timeoutSeconds": 5,
                  "periodSeconds": 60,
                  "successThreshold": 1,
                  "failureThreshold": 2
                },
                "readinessProbe": {
                  "httpGet": {
                    "path": "/health",
                    "port": 8010
                  },
                  "initialDelaySeconds": 10,
                  "timeoutSeconds": 5,
                  "periodSeconds": 10,
                  "successThreshold": 1,
                  "failureThreshold": 1
                },
                "env": [
                  {
                    "name": "MILLICORE_AJP_HOST",
                    "value": "${MILLICORE_AJP_HOST}"
                  },
                  {
                    "name": "SUPERCORE_HOST",
                    "value": "${SUPERCORE_HOST}"
                  },
                  {
                    "name": "NGUI_HOST",
                    "value": "${NGUI_HOST}"
                  },
                  {
                    "name": "APP_STORE_HOST",
                    "value": "${APP_STORE_HOST}"
                  },
                  {
                    "name": "BUILDER_SERVICE_URL",
                    "value": "${BUILDER_SERVICE_URL}"
                  },
                  {
                    "name": "HTTPD_LOG_LEVEL",
                    "value": "${HTTPD_LOG_LEVEL}"
                  },
                  {
                    "name": "HTTPD_PROXY_PORT",
                    "value": "${HTTPD_PROXY_PORT}"
                  },
                  {
                    "name": "PLATFORM_DOCUMENT_ROOT",
                    "value": "${PLATFORM_DOCUMENT_ROOT}"
                  },
                  {
                    "name": "TEMPLATES_SDK_FOLDER",
                    "value": "${TEMPLATES_SDK_FOLDER}"
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "templates-and-sdks",
                    "mountPath": "${PLATFORM_DOCUMENT_ROOT}/${TEMPLATES_SDK_FOLDER}",
                    "readOnly": false
                  }
                ],
                "securityContext": {
                  "runAsUser": 0
                }
              },
              {
                "name": "feedhenry-sdks",
                "image": "${FEEDHENRY_SDKS_IMAGE}:${FEEDHENRY_SDKS_IMAGE_VERSION}",
                "env": [
                  {
                    "name": "FEEDHENRY_SDKS_DIR",
                    "value": "${FEEDHENRY_SDKS_DIR}"
                  }
                ],
                "volumeMounts": [
                  {
                    "name": "templates-and-sdks",
                    "mountPath": "${FEEDHENRY_SDKS_DIR}",
                    "readOnly": false
                  }
                ]
              }
            ],
            "volumes": [
              {
                "name": "git-ssh-keys-volume",
                "secret": {
                  "secretName": "gitlab-ssh"
                }
              },
              {
                "name": "config-volume",
                "secret": {
                  "secretName": "millicore-config"
                }
              },
              {
                "name": "templates-and-sdks",
                "emptyDir": {}
              },
              {
                "name": "metrics-backup-log-volume",
                "persistentVolumeClaim": {
                  "claimName": "metrics-backup-log-data"
                }
              }
            ]
          }
        }
      }
    }
  ]
}


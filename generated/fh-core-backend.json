{
    "kind": "Template",
    "apiVersion": "v1",
    "metadata": {
        "name": "fh-core-backend",
        "creationTimestamp": null,
        "annotations": {
            "description": "Red Hat Mobile Application Platform - Core Backend template",
            "iconClass": "icon-nodejs",
            "templateVersion": "0.0.0"
        }
    },
    "objects": [
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-aaa",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-aaa"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "fh-aaa"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-aaa",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-aaa"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    },
                    "resources": {}
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "name": "fh-aaa"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "fh-aaa"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "fh-aaa",
                                "image": "${FH_AAA_IMAGE}:${FH_AAA_IMAGE_VERSION}",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "FH_LOG_LEVEL",
                                        "value": "${FH_LOG_LEVEL}"
                                    },
                                    {
                                        "name": "MONGODB_USER",
                                        "value": "${MONGODB_FHAAA_USER}"
                                    },
                                    {
                                        "name": "MONGODB_PASSWORD",
                                        "value": "${MONGODB_FHAAA_PASSWORD}"
                                    },
                                    {
                                        "name": "MEMCACHED_SERVICE_NAME",
                                        "value": "${MEMCACHED_SERVICE_NAME}"
                                    },
                                    {
                                        "name": "MEMCACHED_SERVICE_PORT",
                                        "value": "${MEMCACHED_SERVICE_PORT}"
                                    },
                                    {
                                        "name": "MONGODB_SERVICE_NAME",
                                        "value": "${MONGODB_SERVICE_NAME}"
                                    },
                                    {
                                        "name": "MONGODB_SERVICE_PORT",
                                        "value": "${MONGODB_SERVICE_PORT}"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 55,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {}
                    }
                }
            },
            "status": {}
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-messaging",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-messaging"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "fh-messaging"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-messaging",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-messaging"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    },
                    "resources": {
                        "limits": {
                            "cpu": "400m",
                            "memory": "400Mi"
                        },
                        "requests": {
                            "cpu": "200m",
                            "memory": "200Mi"
                        }
                    }
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "name": "fh-messaging"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "fh-messaging"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "fh-messaging",
                                "image": "${FH_MESSAGING_IMAGE}:${FH_MESSAGING_IMAGE_VERSION}",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "FH_MESSAGING_CRON",
                                        "value": "10 07 * * *"
                                    },
                                    {
                                        "name": "MONGODB_FHREPORTING_USER",
                                        "value": "${MONGODB_FHREPORTING_USER}"
                                    },
                                    {
                                        "name": "MONGODB_FHREPORTING_PASSWORD",
                                        "value": "${MONGODB_FHREPORTING_PASSWORD}"
                                    },
                                    {
                                        "name": "MONGODB_FHREPORTING_DATABASE",
                                        "value": "fh-reporting"
                                    },
                                    {
                                        "name": "FH_MESSAGING_API_KEY",
                                        "value": "${FH_MESSAGING_API_KEY}"
                                    },
                                    {
                                        "name": "FH_LOG_LEVEL",
                                        "value": "${FH_DEFAULT_LOG_LEVEL}"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "400m",
                                        "memory": "400Mi"
                                    },
                                    "requests": {
                                        "cpu": "200m",
                                        "memory": "200Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 55,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {}
                    }
                }
            },
            "status": {}
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-metrics",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-metrics"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "fh-metrics"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-metrics",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-metrics"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    },
                    "resources": {
                        "limits": {
                            "cpu": "400m",
                            "memory": "400Mi"
                        },
                        "requests": {
                            "cpu": "200m",
                            "memory": "200Mi"
                        }
                    }
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "name": "fh-metrics"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "fh-metrics"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "fh-metrics",
                                "image": "${FH_METRICS_IMAGE}:${FH_METRICS_IMAGE_VERSION}",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "FH_MBAASID",
                                        "value": "${FH_MBAASID}"
                                    },
                                    {
                                        "name": "MONGODB_FHREPORTING_PASSWORD",
                                        "value": "${MONGODB_FHREPORTING_PASSWORD}"
                                    },
                                    {
                                        "name": "MONGODB_FHREPORTING_USER",
                                        "value": "${MONGODB_FHREPORTING_USER}"
                                    },
                                    {
                                        "name": "MONGODB_FHREPORTING_DATABASE",
                                        "value": "fh-reporting"
                                    },
                                    {
                                        "name": "FH_METRICS_API_KEY",
                                        "value": "${FH_METRICS_API_KEY}"
                                    },
                                    {
                                        "name": "FH_LOG_LEVEL",
                                        "value": "${FH_DEFAULT_LOG_LEVEL}"
                                    }
                                ],
                                "resources": {
                                    "limits": {
                                        "cpu": "400m",
                                        "memory": "400Mi"
                                    },
                                    "requests": {
                                        "cpu": "200m",
                                        "memory": "200Mi"
                                    }
                                },
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 55,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {}
                    }
                }
            },
            "status": {}
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-scm",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-scm"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "fh-scm"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-scm",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-scm"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    },
                    "resources": {}
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "name": "fh-scm"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "fh-scm"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "scm-data",
                                "emptyDir": {}
                            }
                        ],
                        "containers": [
                            {
                                "name": "fh-scm",
                                "image": "${FH_SCM_IMAGE}:${FH_SCM_IMAGE_VERSION}",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "FH_LOG_LEVEL",
                                        "value": "${FH_LOG_LEVEL}"
                                    },
                                    {
                                        "name": "FH_SCM_FILE_SERVER_PATH",
                                        "value": "/tmp/fh-scm"
                                    },
                                    {
                                        "name": "FH_SCM_FILE_SERVER_BACKUP",
                                        "value": "/tmp/fh-scm/backup"
                                    },
                                    {
                                        "name": "FH_SCM_FILE_SERVER_KEY_STORE",
                                        "value": "/tmp/fh-scm/keystore"
                                    },
                                    {
                                        "name": "FH_MILLICORE_SERVICE_HOST",
                                        "value": "${FH_MILLICORE_SERVICE_HOST}"
                                    },
                                    {
                                        "name": "FH_MILLICORE_SERVICE_PORT",
                                        "value": "${FH_MILLICORE_SERVICE_PORT}"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "scm-data",
                                        "mountPath": "/tmp"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 55,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {}
                    }
                }
            },
            "status": {}
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-supercore",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-supercore"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "fh-supercore"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "fh-supercore",
                "creationTimestamp": null,
                "labels": {
                    "name": "fh-supercore"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    },
                    "resources": {}
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "name": "fh-supercore"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "fh-supercore"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "fh-supercore",
                                "image": "${FH_SUPERCORE_IMAGE}:${FH_SUPERCORE_IMAGE_VERSION}",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "FH_AAA_SERVICE_HOST",
                                        "value": "fh-aaa"
                                    },
                                    {
                                        "name": "FH_AAA_SERVICE_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "FH_MILLICORE_SERVICE_HOST",
                                        "value": "http://millicore"
                                    },
                                    {
                                        "name": "FH_MILLICORE_SERVICE_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "FH_SCM_SERVICE_HOST",
                                        "value": "fh-scm"
                                    },
                                    {
                                        "name": "MEMCACHED_SERVICE_HOST",
                                        "value": "memcached"
                                    },
                                    {
                                        "name": "FH_MESSAGING_SERVICE_HOST",
                                        "value": "fh-messaging"
                                    },
                                    {
                                        "name": "FH_MESSAGING_SERVICE_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "FH_MESSAGING_API_KEY",
                                        "value": "${FH_MESSAGING_API_KEY}"
                                    },
                                    {
                                        "name": "FH_METRICS_SERVICE_HOST",
                                        "value": "fh-metrics"
                                    },
                                    {
                                        "name": "FH_METRICS_SERVICE_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "FH_METRICS_API_KEY",
                                        "value": "${FH_METRICS_API_KEY}"
                                    },
                                    {
                                        "name": "FH_UPS_SERVICE_HOST",
                                        "value": "ups"
                                    },
                                    {
                                        "name": "FH_UPS_SERVICE_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "FH_SCM_SERVICE_PORT",
                                        "value": "8080"
                                    },
                                    {
                                        "name": "FH_MILLICORE_SERVICE_KEY",
                                        "value": "${FH_MILLICORE_SERVICE_KEY}"
                                    },
                                    {
                                        "name": "FH_MILLICORE_API_KEY",
                                        "value": "${FH_MILLICORE_API_KEY}"
                                    },
                                    {
                                        "name": "MONGODB_SERVICE_NAME",
                                        "value": "${MONGODB_SERVICE_NAME}"
                                    },
                                    {
                                        "name": "CLUSTER_NAME",
                                        "value": "${CLUSTER_NAME}"
                                    },
                                    {
                                        "name": "FH_LOG_LEVEL",
                                        "value": "${FH_LOG_LEVEL}"
                                    },
                                    {
                                        "name": "MONGODB_FHSUPERCORE_USER",
                                        "value": "${MONGODB_FHSUPERCORE_USER}"
                                    },
                                    {
                                        "name": "MONGODB_FHSUPERCORE_PASSWORD",
                                        "value": "${MONGODB_FHSUPERCORE_PASSWORD}"
                                    },
                                    {
                                        "name": "REDIS_PASSWORD",
                                        "value": "${REDIS_PASSWORD}"
                                    },
                                    {
                                        "name": "FH_MESSAGING_API_KEY",
                                        "value": "${FH_MESSAGING_API_KEY}"
                                    },
                                    {
                                        "name": "FH_METRICS_API_KEY",
                                        "value": "${FH_METRICS_API_KEY}"
                                    },
                                    {
                                        "name": "FH_STATSD_API_KEY",
                                        "value": "${FH_STATSD_API_KEY}"
                                    },
                                    {
                                        "name": "REDIS_SERVICE_NAME",
                                        "value": "${REDIS_SERVICE_NAME}"
                                    },
                                    {
                                        "name": "REDIS_SERVICE_PORT",
                                        "value": "6379"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 55,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/sys/info/ping",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {}
                    }
                }
            },
            "status": {}
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "gitlab-shell",
                "creationTimestamp": null,
                "labels": {
                    "name": "gitlab-shell"
                }
            },
            "spec": {
                "ports": [
                    {
                        "name": "internal-ssh-port",
                        "protocol": "TCP",
                        "port": 22,
                        "targetPort": 22
                    },
                    {
                        "name": "server-http-port",
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "gitlab-shell"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "gitlab-shell-http-route",
                "creationTimestamp": null,
                "labels": {
                    "app": "gitlab-shell"
                }
            },
            "spec": {
                "host": "${GIT_HTTP_HOST}",
                "to": {
                    "kind": "Service",
                    "name": "gitlab-shell"
                },
                "port": {
                    "targetPort": "server-http-port"
                },
                "tls": {
                    "termination": "edge",
                    "insecureEdgeTerminationPolicy": "Allow"
                }
            },
            "status": {
                "ingress": null
            }
        },
        {
            "kind": "ConfigMap",
            "apiVersion": "v1",
            "metadata": {
                "name": "gitlab-shell",
                "creationTimestamp": null
            },
            "data": {
                "config.yml": "user: git\ngitlab_url: \"${GITLAB_MILLICORE_AUTH_URL}\"\nhttp_settings:\n  enabled: true\n  servicekey: ${GITLAB_MILLICORE_SERVICE_KEY}\n  url: \"http://${FH_MILLICORE_SERVICE_HOST}:${FH_MILLICORE_SERVICE_PORT}\"\n  self_signed_cert: false\nrepos_path: \"${GIT_REPO_ROOT}/repositories\"\nauth_file: \"/home/git/.ssh/authorized_keys\"\nredis:\n  bin: /home/git/gitlab-shell/bin/dummy-redis-cli\n  database: 0\n  socket: /var/run/redis/redis.sock\n  namespace: resque:gitlab\nlog_level: INFO\naudit_usernames: false\nrabbit:\n  enabled: false\n"
            }
        },
        {
            "apiVersion": "v1",
            "kind": "PersistentVolumeClaim",
            "metadata": {
                "name": "git-data"
            },
            "spec": {
                "accessModes": [
                    "ReadWriteOnce"
                ],
                "resources": {
                    "requests": {
                        "storage": "${GITLAB_SHELL_PVC_SIZE}"
                    }
                }
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "gitlab-shell",
                "creationTimestamp": null,
                "labels": {
                    "name": "gitlab-shell"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    },
                    "resources": {}
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "name": "gitlab-shell"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "gitlab-shell"
                        }
                    },
                    "spec": {
                        "volumes": [
                            {
                                "name": "gitlab-shell-configmap",
                                "configMap": {
                                    "name": "gitlab-shell"
                                }
                            },
                            {
                                "name": "git-ssh-keys-volume",
                                "secret": {
                                    "secretName": "gitlab-ssh"
                                }
                            },
                            {
                                "name": "git-data-volume",
                                "persistentVolumeClaim": {
                                    "claimName": "git-data"
                                }
                            }
                        ],
                        "containers": [
                            {
                                "name": "gitlab-shell",
                                "image": "${GITLAB_SHELL_IMAGE}:${GITLAB_SHELL_IMAGE_VERSION}",
                                "ports": [
                                    {
                                        "containerPort": 22,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "GIT_REPO_ROOT",
                                        "value": "${GIT_REPO_ROOT}"
                                    },
                                    {
                                        "name": "SSH_SECRETS_DIR",
                                        "value": "${SSH_SECRETS_DIR}"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "gitlab-shell-configmap",
                                        "mountPath": "/home/git/gitlab-config"
                                    },
                                    {
                                        "name": "git-ssh-keys-volume",
                                        "readOnly": true,
                                        "mountPath": "${SSH_SECRETS_DIR}"
                                    },
                                    {
                                        "name": "git-data-volume",
                                        "mountPath": "${GIT_REPO_ROOT}"
                                    }
                                ],
                                "livenessProbe": {
                                    "tcpSocket": {
                                        "port": 22
                                    },
                                    "initialDelaySeconds": 600,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "tcpSocket": {
                                        "port": 22
                                    },
                                    "initialDelaySeconds": 2,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 30,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "imagePullPolicy": "IfNotPresent"
                            },
                            {
                                "name": "gitlab-httpd-proxy",
                                "image": "${HTTPD_IMAGE}:${HTTPD_IMAGE_VERSION}",
                                "ports": [
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "MILLICORE_HTTP_HOST",
                                        "value": "${MILLICORE_HTTP_HOST}"
                                    },
                                    {
                                        "name": "HTTP_REPO_ROOT",
                                        "value": "${HTTP_REPO_ROOT}"
                                    },
                                    {
                                        "name": "HTTPD_LOG_LEVEL",
                                        "value": "${HTTPD_LOG_LEVEL}"
                                    }
                                ],
                                "resources": {},
                                "volumeMounts": [
                                    {
                                        "name": "git-data-volume",
                                        "mountPath": "${HTTP_REPO_ROOT}"
                                    }
                                ],
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 600,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/health",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 10,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {
                            "runAsUser": 0
                        }
                    }
                }
            },
            "status": {}
        },
        {
            "kind": "Route",
            "apiVersion": "v1",
            "metadata": {
                "name": "ups",
                "creationTimestamp": null,
                "annotations": {
                    "openshift.io/host.generated": "false"
                }
            },
            "spec": {
                "host": "",
                "to": {
                    "kind": "Service",
                    "name": "ups"
                },
                "tls": {
                    "termination": "edge",
                    "insecureEdgeTerminationPolicy": "Allow"
                }
            },
            "status": {
                "ingress": null
            }
        },
        {
            "kind": "Service",
            "apiVersion": "v1",
            "metadata": {
                "name": "ups",
                "creationTimestamp": null,
                "labels": {
                    "name": "ups"
                }
            },
            "spec": {
                "ports": [
                    {
                        "protocol": "TCP",
                        "port": 8080,
                        "targetPort": 8080
                    }
                ],
                "selector": {
                    "name": "ups"
                },
                "type": "ClusterIP",
                "sessionAffinity": "None"
            },
            "status": {
                "loadBalancer": {}
            }
        },
        {
            "kind": "DeploymentConfig",
            "apiVersion": "v1",
            "metadata": {
                "name": "ups",
                "creationTimestamp": null,
                "labels": {
                    "name": "ups"
                }
            },
            "spec": {
                "strategy": {
                    "type": "Rolling",
                    "rollingParams": {
                        "updatePeriodSeconds": 1,
                        "intervalSeconds": 1,
                        "timeoutSeconds": 600,
                        "maxUnavailable": "25%",
                        "maxSurge": "25%"
                    },
                    "resources": {}
                },
                "triggers": [
                    {
                        "type": "ConfigChange"
                    }
                ],
                "replicas": 1,
                "test": false,
                "selector": {
                    "name": "ups"
                },
                "template": {
                    "metadata": {
                        "creationTimestamp": null,
                        "labels": {
                            "name": "ups"
                        }
                    },
                    "spec": {
                        "containers": [
                            {
                                "name": "ups",
                                "image": "${UPS_IMAGE}:${UPS_IMAGE_VERSION}",
                                "ports": [
                                    {
                                        "containerPort": 8443,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 8080,
                                        "protocol": "TCP"
                                    },
                                    {
                                        "containerPort": 9990,
                                        "protocol": "TCP"
                                    }
                                ],
                                "env": [
                                    {
                                        "name": "MYSQL_USER",
                                        "value": "${UPS_USER}"
                                    },
                                    {
                                        "name": "MYSQL_PASSWORD",
                                        "value": "${UPS_PASSWORD}"
                                    },
                                    {
                                        "name": "MYSQL_HOST",
                                        "value": "${MYSQL_HOST}"
                                    },
                                    {
                                        "name": "MYSQL_DATABASE",
                                        "value": "${UPS_DATABASE}"
                                    }
                                ],
                                "resources": {},
                                "livenessProbe": {
                                    "httpGet": {
                                        "path": "/ag-push",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 600,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 60,
                                    "successThreshold": 1,
                                    "failureThreshold": 2
                                },
                                "readinessProbe": {
                                    "httpGet": {
                                        "path": "/ag-push",
                                        "port": 8080,
                                        "scheme": "HTTP"
                                    },
                                    "initialDelaySeconds": 100,
                                    "timeoutSeconds": 5,
                                    "periodSeconds": 10,
                                    "successThreshold": 1,
                                    "failureThreshold": 1
                                },
                                "terminationMessagePath": "/dev/termination-log",
                                "imagePullPolicy": "IfNotPresent"
                            }
                        ],
                        "restartPolicy": "Always",
                        "terminationGracePeriodSeconds": 30,
                        "dnsPolicy": "ClusterFirst",
                        "securityContext": {}
                    }
                }
            },
            "status": {}
        }
    ],
    "parameters": [
        {
            "name": "FH_AAA_IMAGE",
            "description": "The name of the fh-aaa image",
            "value": "docker.io/rhmap/fh-aaa",
            "required": true
        },
        {
            "name": "FH_AAA_IMAGE_VERSION",
            "description": "The version for the FH_AAA_IMAGE",
            "value": "0.3.0-349",
            "required": true
        },
        {
            "name": "FH_LOG_LEVEL",
            "description": "A default log level for all components",
            "value": "info"
        },
        {
            "name": "MONGODB_FHAAA_USER",
            "description": "The MongoDB username for fh-aaa",
            "value": "u-aaa"
        },
        {
            "name": "MONGODB_FHAAA_PASSWORD",
            "description": "The MongoDB password for fh-aaa",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "MEMCACHED_SERVICE_NAME",
            "description": "The memcached service name",
            "value": "memcached"
        },
        {
            "name": "MEMCACHED_SERVICE_PORT",
            "description": "The memcached service port",
            "value": "11211"
        },
        {
            "name": "MONGODB_SERVICE_NAME",
            "description": "The mongodb service name",
            "value": "mongodb-1"
        },
        {
            "name": "MONGODB_SERVICE_PORT",
            "description": "The mongodb service port",
            "value": "27017"
        },
        {
            "name": "FH_MESSAGING_API_KEY",
            "description": "Key for communicating with the FH_MESSAGING Service",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "FH_MESSAGING_IMAGE",
            "description": "The name of the fh-messaging image",
            "value": "docker.io/rhmap/fh-messaging"
        },
        {
            "name": "FH_MESSAGING_IMAGE_VERSION",
            "description": "The version for the FH_MESSAGING_IMAGE",
            "value": "2.2.0-394"
        },
        {
            "name": "MONGODB_FHREPORTING_USER",
            "description": "The Reporting user name",
            "value": "u-reporting"
        },
        {
            "name": "MONGODB_FHREPORTING_PASSWORD",
            "description": "The MongoDB Reporting password",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "FH_DEFAULT_LOG_LEVEL",
            "description": "A default log level for all MBaaS components",
            "value": "info"
        },
        {
            "name": "FH_METRICS_IMAGE",
            "description": "The name of the fh-metrics image",
            "value": "docker.io/rhmap/fh-metrics"
        },
        {
            "name": "FH_METRICS_IMAGE_VERSION",
            "description": "The version for the FH_METRICS_IMAGE",
            "value": "2.2.0-394"
        },
        {
            "name": "FH_METRICS_API_KEY",
            "description": "Key for communicating with the FH_METRICS Service",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "FH_SCM_IMAGE",
            "description": "The name of the fh-scm image",
            "value": "docker.io/rhmap/fh-scm"
        },
        {
            "name": "FH_SCM_IMAGE_VERSION",
            "description": "The version for the FH_SCM_IMAGE",
            "value": "0.18.0-260"
        },
        {
            "name": "FH_MILLICORE_SERVICE_HOST",
            "description": "TODO: remove references to me once millicore is running on OpenShift",
            "value": "millicore"
        },
        {
            "name": "FH_MILLICORE_SERVICE_PORT",
            "description": "TODO: remove references to me once millicore is running on OpenShift",
            "value": "8080"
        },
        {
            "name": "FH_STATSD_API_KEY",
            "value": "test"
        },
        {
            "name": "FH_SUPERCORE_IMAGE",
            "description": "The name of the fh-supercore image",
            "value": "docker.io/rhmap/fh-supercore"
        },
        {
            "name": "FH_SUPERCORE_IMAGE_VERSION",
            "description": "The version for the FH_SUPERCORE_IMAGE",
            "value": "3.21.1-2526"
        },
        {
            "name": "CLUSTER_NAME",
            "description": "The name of this RHMAP Core cluster",
            "value": "rhmap"
        },
        {
            "name": "MONGODB_FHSUPERCORE_USER",
            "description": "The MongoDB username for fh-supercore",
            "value": "u-supercore"
        },
        {
            "name": "MONGODB_FHSUPERCORE_PASSWORD",
            "description": "The MongoDB password for fh-supercore",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "REDIS_PASSWORD",
            "description": "The Redis password for fh-supercore"
        },
        {
            "name": "FH_MILLICORE_API_KEY",
            "description": "Key for communicating with the millicore Service",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "REDIS_SERVICE_NAME",
            "description": "The redis service name",
            "value": "redis"
        },
        {
            "name": "FH_MILLICORE_SERVICE_KEY",
            "description": "Key for communicating with the millicore Service",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "FH_AAA_SERVICE_HOST",
            "value": "fh-aaa"
        },
        {
            "name": "GITLAB_SHELL_IMAGE",
            "description": "The name of the gitlab-shell image",
            "value": "docker.io/rhmap/gitlab-shell"
        },
        {
            "name": "GITLAB_SHELL_IMAGE_VERSION",
            "description": "The version for the GITLAB_SHELL_IMAGE",
            "value": "2.0.0.pre-40"
        },
        {
            "name": "GITLAB_SHELL_PVC_SIZE",
            "description": "The size in bytes of the volume for repositories. Can be unadorned integers, or fixed-point integers with one of these SI suffices (E, P, T, G, M, K, m) or their power-of-two equivalents (Ei, Pi, Ti, Gi, Mi, Ki). For example, the following represent roughly the same value: 128974848, 129e6, 129M , 123Mi. Small quantities can be represented directly as decimals (e.g., 0.3), or using milli-units (e.g., 300m).",
            "value": "1Gi"
        },
        {
            "name": "GITLAB_MILLICORE_AUTH_URL",
            "description": "The URL that GitLab is exposed at",
            "value": "http://millicore:8080/box/api/gls/"
        },
        {
            "name": "GIT_REPO_ROOT",
            "description": "Path to data folder that would contain repositories and all other required files",
            "value": "/home/git/data"
        },
        {
            "name": "SSH_SECRETS_DIR",
            "description": "Mount path for ssh keys",
            "value": "/etc/feedhenry/gitlab-shell"
        },
        {
            "name": "GITLAB_MILLICORE_SERVICE_KEY",
            "description": "Service key used to call millicore http api",
            "value": "SERVICE_KEY"
        },
        {
            "name": "GIT_HTTP_HOST",
            "description": "External dns name that would be setup for router"
        },
        {
            "name": "HTTPD_IMAGE",
            "description": "The name of the httpd proxy image used to serve git repositories",
            "value": "docker.io/rhmap/httpd24"
        },
        {
            "name": "HTTPD_IMAGE_VERSION",
            "description": "The version for the HTTPD_IMAGE",
            "value": "2.4-38"
        },
        {
            "name": "MILLICORE_HTTP_HOST",
            "description": "Internal hostname for millicore http service",
            "value": "millicore:8080"
        },
        {
            "name": "HTTP_REPO_ROOT",
            "description": "Git repository mount directory for apache httpd",
            "value": "/srv"
        },
        {
            "name": "HTTPD_LOG_LEVEL",
            "description": "Apache log level",
            "value": "info"
        },
        {
            "name": "UPS_IMAGE",
            "description": "The name of the Unified Push image",
            "value": "docker.io/rhmap/unifiedpush-wildfly",
            "required": true
        },
        {
            "name": "UPS_IMAGE_VERSION",
            "description": "The version for the UPS_IMAGE",
            "value": "latest",
            "required": true
        },
        {
            "name": "UPS_USER",
            "description": "MYSQL database user",
            "value": "unifiedpush"
        },
        {
            "name": "UPS_PASSWORD",
            "description": "MYSQL database password",
            "generate": "expression",
            "from": "[a-zA-Z0-9]{40}"
        },
        {
            "name": "UPS_DATABASE",
            "description": "MYSQL database",
            "value": "unifiedpush"
        },
        {
            "name": "MYSQL_HOST",
            "description": "MYSQL database host",
            "value": "mysql"
        }
    ]
}
